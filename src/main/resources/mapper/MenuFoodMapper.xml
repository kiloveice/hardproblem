<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="live.hardproblem.dao.MenuFoodMapper">
  <resultMap id="BaseResultMap" type="live.hardproblem.dao.entity.MenuFood">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="menu_id" jdbcType="INTEGER" property="menuId" />
    <result column="food_id" jdbcType="INTEGER" property="foodId" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, menu_id, food_id, status, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from menu_food
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from menu_food
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="live.hardproblem.dao.entity.MenuFood">
    insert into menu_food (id, menu_id, food_id, 
      status, created_at, updated_at
      )
    values (#{id,jdbcType=INTEGER}, #{menuId,jdbcType=INTEGER}, #{foodId,jdbcType=INTEGER}, 
      #{status,jdbcType=BIT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="live.hardproblem.dao.entity.MenuFood">
    insert into menu_food
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="foodId != null">
        food_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="menuId != null">
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="foodId != null">
        #{foodId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="live.hardproblem.dao.entity.MenuFood">
    update menu_food
    <set>
      <if test="menuId != null">
        menu_id = #{menuId,jdbcType=INTEGER},
      </if>
      <if test="foodId != null">
        food_id = #{foodId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="live.hardproblem.dao.entity.MenuFood">
    update menu_food
    set menu_id = #{menuId,jdbcType=INTEGER},
      food_id = #{foodId,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>